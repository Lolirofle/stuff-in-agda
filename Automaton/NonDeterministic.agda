module Automaton.NonDeterministic where

import      Lvl
open import Data.Boolean
import      Data.Boolean.Operators
open        Data.Boolean.Operators.Programming
open import Data.List using (List) renaming (‚àÖ to Œµ ; _‚ä∞_ to _¬∑_)
open import Functional
open import Logic
open import Sets.ExtensionalPredicateSet
open import Structure.Setoid
open import Type

-- Non-deterministic Automata
-- `State`      (Q)  is the set of states.
-- `Alphabet`   (Œ£)  is the set of symbols/the alphabet.
-- `transition` (Œ¥)  is the transition function.
-- `start`      (q‚ÇÄ) is the start state.
-- `Final`      (F)  is the subset of State which are the final/accepting states.
record NonDeterministic {‚Ñì‚Çö ‚Ñì‚Çõ ‚Ñì‚Çë ‚Ñì‚Çê} (State : Type{‚Ñì‚Çõ}) ‚¶É equiv-state : Equiv{‚Ñì‚Çë}(State) ‚¶Ñ (Alphabet : Type{‚Ñì‚Çê}) : Type{‚Ñì‚Çõ Lvl.‚äî ‚Ñì‚Çë Lvl.‚äî ‚Ñì‚Çê Lvl.‚äî Lvl.ùêí(‚Ñì‚Çö)} where
  constructor nondeterministic
  field
    transition : State ‚Üí Alphabet ‚Üí PredSet{‚Ñì‚Çö}(State)
    start      : State
    Final      : PredSet{‚Ñì‚Çö}(State)

  Word = List(Alphabet)

  -- Chained transition using a word (list of characters).
  wordTransition : State ‚Üí Word ‚Üí PredSet{‚Ñì‚Çë}(State)
  wordTransition initialState Œµ       = ‚Ä¢ initialState
  wordTransition initialState (a ¬∑ l) = {!‚ãÉ ?!} -- wordTransition (transition initialState a) l
{-
  module LetterNotation where
    Q  = State
    Œ£  = Alphabet
    Œ¥  = transition
    Œ¥ÃÇ  = wordTransition
    q‚ÇÄ = start
    F  = Final

  -- A word is accepted by the automaton when it can transition from the start state to a final state.
  AcceptsWord : Word ‚Üí Stmt
  AcceptsWord = (_‚àà Final) ‚àò wordTransition start

  -- The subset of State which are the accessible states from the start state by chained transitions.
  Accessible : PredSet(State)
  Accessible = ‚ä∂(wordTransition start)

  automatonTransition : Alphabet ‚Üí NonDeterministic(State)(Alphabet)
  transition (automatonTransition _) = transition
  start      (automatonTransition c) = transition start c
  Final      (automatonTransition _) = Final

  automatonTransitionWord : Word ‚Üí NonDeterministic(State)(Alphabet)
  transition (automatonTransitionWord _) = transition
  start      (automatonTransitionWord w) = wordTransition start w
  Final      (automatonTransitionWord _) = Final
-}
