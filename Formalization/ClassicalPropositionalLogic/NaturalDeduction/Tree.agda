open import Type
open import Logic.Classical as Logic using (Classical)
open import Logic.Predicate as Logic using ()

module Formalization.ClassicalPropositionalLogic.NaturalDeduction.Tree โฆ classical : โ{โ} โ Logic.โโ(Classical{โ}) โฆ where

import      Lvl
open import Logic
open import Sets.PredicateSet using (PredSet ; _โ_ ; _โ_ ; _โช_ ; _โชโข_ ; _โ_ ; _โ_ ; _โ_ ; โ ; [โก]-to-[โ] ; [โก]-to-[โ]) renaming (โข_ to singleton ; _โก_ to _โกโ_)

private variable โโ โ โโ โโ : Lvl.Level

open import Formalization.ClassicalPropositionalLogic.Syntax

module _ {โโ} {P : Type{โโ}} where
  {-# NO_POSITIVITY_CHECK #-}
  data Tree : Formula(P) โ Stmt{Lvl.๐(โโ)} where
    [โค]-intro : Tree(โค)

    [โฅ]-intro : โ{ฯ} โ Tree(ฯ) โ Tree(ยฌ ฯ) โ Tree(โฅ)
    [โฅ]-elim  : โ{ฯ} โ Tree(โฅ) โ Tree(ฯ)

    [ยฌ]-intro : โ{ฯ} โ (Tree(ฯ) โ Tree(โฅ)) โ Tree(ยฌ ฯ)
    [ยฌ]-elim  : โ{ฯ} โ (Tree(ยฌ ฯ) โ Tree(โฅ)) โ Tree(ฯ)

    [โง]-intro : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ) โ Tree(ฯ โง ฯ)
    [โง]-elimโ : โ{ฯ ฯ} โ Tree(ฯ โง ฯ) โ Tree(ฯ)
    [โง]-elimแตฃ : โ{ฯ ฯ} โ Tree(ฯ โง ฯ) โ Tree(ฯ)

    [โจ]-introโ : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ โจ ฯ)
    [โจ]-introแตฃ : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ โจ ฯ)
    [โจ]-elim   : โ{ฯ ฯ ฯ} โ (Tree(ฯ) โ Tree(ฯ)) โ (Tree(ฯ) โ Tree(ฯ)) โ Tree(ฯ โจ ฯ) โ Tree(ฯ)

    [โถ]-intro : โ{ฯ ฯ} โ (Tree(ฯ) โ Tree(ฯ)) โ Tree(ฯ โถ ฯ)
    [โถ]-elim  : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ โถ ฯ) โ Tree(ฯ)

    [โท]-intro : โ{ฯ ฯ} โ (Tree(ฯ) โ Tree(ฯ)) โ (Tree(ฯ) โ Tree(ฯ)) โ Tree(ฯ โท ฯ)
    [โท]-elimโ : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ โท ฯ) โ Tree(ฯ)
    [โท]-elimแตฃ : โ{ฯ ฯ} โ Tree(ฯ) โ Tree(ฯ โท ฯ) โ Tree(ฯ)

  open import Formalization.ClassicalPropositionalLogic.NaturalDeduction

  module _ {โ} where
    Tree-to-[โข]-tautologies : โ{ฯ} โ Tree(ฯ) โ (โ{โ} โข ฯ)
    Tree-to-[โข]-tautologies {.โค} [โค]-intro = [โค]-intro
    Tree-to-[โข]-tautologies {.โฅ} ([โฅ]-intro tฯ tฯโ) =
      ([โฅ]-intro
        (Tree-to-[โข]-tautologies tฯ)
        (Tree-to-[โข]-tautologies tฯโ)
      )
    Tree-to-[โข]-tautologies {ฯ} ([โฅ]-elim tฯ) =
      ([โฅ]-elim
        (Tree-to-[โข]-tautologies tฯ)
      )
    Tree-to-[โข]-tautologies {.(ยฌ _)} ([ยฌ]-intro x) = [ยฌ]-intro {!!}
    Tree-to-[โข]-tautologies {ฯ} ([ยฌ]-elim x) = {!!}
    Tree-to-[โข]-tautologies {.(_ โง _)} ([โง]-intro tฯ tฯโ) =
      ([โง]-intro
        (Tree-to-[โข]-tautologies tฯ)
        (Tree-to-[โข]-tautologies tฯโ)
      )
    Tree-to-[โข]-tautologies {ฯ} ([โง]-elimโ tฯ) =
      ([โง]-elimโ
        (Tree-to-[โข]-tautologies tฯ)
      )
    Tree-to-[โข]-tautologies {ฯ} ([โง]-elimแตฃ tฯ) =
      ([โง]-elimแตฃ
        (Tree-to-[โข]-tautologies tฯ)
      )
    Tree-to-[โข]-tautologies {.(_ โจ _)} ([โจ]-introโ tฯ) =
      ([โจ]-introโ
        (Tree-to-[โข]-tautologies tฯ)
      )
    Tree-to-[โข]-tautologies {.(_ โจ _)} ([โจ]-introแตฃ tฯ) =
      ([โจ]-introแตฃ
        (Tree-to-[โข]-tautologies tฯ)
      )
    Tree-to-[โข]-tautologies {ฯ} ([โจ]-elim x xโ tฯ) = {!!}
    Tree-to-[โข]-tautologies {.(_ โถ _)} ([โถ]-intro x) = {!!}
    Tree-to-[โข]-tautologies {ฯ} ([โถ]-elim tฯ tฯโ) =
      ([โถ]-elim
        (Tree-to-[โข]-tautologies tฯ)
        (Tree-to-[โข]-tautologies tฯโ)
      )
    Tree-to-[โข]-tautologies {.(_ โท _)} ([โท]-intro x xโ) = {!!}
    Tree-to-[โข]-tautologies {ฯ} ([โท]-elimโ tฯ tฯโ) =
      ([โท]-elimโ
        (Tree-to-[โข]-tautologies tฯ)
        (Tree-to-[โข]-tautologies tฯโ)
      )
    Tree-to-[โข]-tautologies {ฯ} ([โท]-elimแตฃ tฯ tฯโ) =
      ([โท]-elimแตฃ
        (Tree-to-[โข]-tautologies tฯ)
        (Tree-to-[โข]-tautologies tฯโ)
      )

  --Tree-to-[โข] : โ{P : Type{โโ}}{ฮ : Formulas(P)}{ฯ} โ ((ฮ โ Tree) โ Tree(ฯ)) โ (ฮ โข ฯ)
  --Tree-to-[โข] {ฮ} {ฯ} t = {!!}
