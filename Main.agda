module Main where

import Automaton.DeterministicFinite
import Automaton.NonDeterministicFinite
import Automaton.Pushdown
import Automaton.TuringMachine
import Cardinal
import Cardinal.Finite.Count
import Data
import Data.Boolean
import Data.Boolean.AsSet
import Data.Boolean.Operators
import Data.Boolean.Proofs
import Data.Either
import Data.List
import Data.List.Proofs
import Data.List.Proofs.Membership
import Data.List.Proofs.Sublist
import Data.List.Relation
import Data.List.Relation.Membership
import Data.List.Relation.Sublist
import Data.ListNonEmpty
import Data.Option
import Data.Tuple
import Data.Tuple.List
import Data.Tuple.Raise
import Data.Tuple.Raiseᵣ
import Data.Tuple.Raiseₗ
import FFI.IO   as FFI
import FormalLanguage
import FormalLanguage.ContextFreeGrammar
import FormalLanguage.Proofs
import FormalLanguage.RegularExpression
import Functional
import Functional.ComposeRaise
import Functional.DomainRaise
import Functional.Domains
import Functional.Equals
import Functional.Names
import Functional.PrimitiveRecursion
import Functional.Proofs
-- import Geometry.Test
-- import Geometry.Test2
import Graph
import Lang.Instance
import Logic.Classical.DoubleNegated
import Logic.Classical.Mere
import Logic.Classical.NaturalDeduction
import Logic.Classical.SetTheory.ZFC
import Logic.Computability
import Logic.Constructive.NaturalDeduction
import Logic.Convenience
import Logic.DiagonalProof
import Logic.LambdaCalculus
import Logic.Predicate
import Logic.Predicate.Theorems
import Logic.Properties
import Logic.Propositional
import Logic.Propositional.Names
import Logic.Propositional.Theorems
import Lvl
import Metalogic.Classical.Propositional.ProofSystem
import Metalogic.Classical.Propositional.Semantics
import Metalogic.Classical.Propositional.Syntax
import Numeral.Finite
import Numeral.FiniteStrict
import Numeral.FiniteStrict.BooleanOper
import Numeral.FiniteStrict.Bound
import Numeral.Integer
import Numeral.Integer.Function
import Numeral.Integer.Oper
import Numeral.Integer.Relation
import Numeral.Integer.Sign
import Numeral.Integer.Theorems
import Numeral.Matrix
import Numeral.Natural
import Numeral.Natural.BooleanOper
import Numeral.Natural.Coprime
import Numeral.Natural.Divisibility
import Numeral.Natural.Function
import Numeral.Natural.Oper
import Numeral.Natural.Oper.Modulo
import Numeral.Natural.Oper.Properties
import Numeral.Natural.Order
import Numeral.Natural.Prime
import Numeral.Natural.Proof
import Numeral.Natural.Relation
import Numeral.Natural.Relation.Countable
import Numeral.Natural.Relation.Properties
import Numeral.Natural.TotalOper
import Numeral.Natural.UnclosedOper
import Numeral.Rational.AlterAdd
-- import Numeral.Rational.SternBrocot
import Numeral.Real
import Numeral.Real.Properties
import Numeral.Sign
import Numeral.Sign.Oper
import Numeral.Sign.Oper0
import Numeral.Vector
import Operator.Equals
import Relator.Bijection
import Relator.Congruence
import Relator.Congruence.Proofs
import Relator.Countable
import Relator.Equals
import Relator.Equals.Proofs
import Relator.Equals.Proofs.Uniqueness
import Relator.Equals.Uniqueness
import Relator.Finite
import Sets.BoolSet
import Sets.ETCS
import Sets.IZF
import Sets.PredicateSet
import Sets.PredicateSet.Finite
import Sets.PredicateSet.Relations
import Sets.Subset
import Sets.TypeSet
import Stream
import String
import Structure.Arithmetic
import Structure.Category
import Structure.Function
import Structure.Function.Domain
import Structure.Function.Linear
import Structure.Function.Ordering
import Structure.LinearAlgebra
import Structure.Operator.Field
import Structure.Operator.Group
import Structure.Operator.Group.Theorems
import Structure.Operator.Monoid
import Structure.Operator.Properties
import Structure.Operator.SetAlgebra
import Structure.Operator.Vector
import Structure.Real
import Structure.Relator.Equivalence as Eq
import Structure.Relator.Ordering
import Structure.Relator.Ordering.Subsets
import Structure.Relator.Properties
import Syntax.Function
import Syntax.Method
import Syntax.Number
import Cardinal.Proofs
import Type

main : FFI.IO Data.Unit
main = FFI.printStrLn("Okay")
