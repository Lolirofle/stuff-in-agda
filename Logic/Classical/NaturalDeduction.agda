module Logic.Classical.NaturalDeduction where

open import Functional
import      Lvl
open import Type

-- TODO: Maybe it is worth to try and take a more minimal approach? (Less axioms? Is this more practical/impractical?)

-- Theory of classical propositional logic expressed using natural deduction rules
record Propositional {โ} (Stmt : Type{โ}) : Type{Lvl.๐(โ)} where
  infixl 10000 โข_
  infixl 1010 ยฌ_
  infixl 1005 _โง_
  infixl 1004 _โจ_
  infixl 1000 _โต_ _โท_ _โถ_

  field
    โข_ : Stmt โ Type{โ}

  field
    _โง_  : Stmt โ Stmt โ Stmt
    _โถ_ : Stmt โ Stmt โ Stmt
    _โต_ : Stmt โ Stmt โ Stmt
    _โท_ : Stmt โ Stmt โ Stmt
    _โจ_  : Stmt โ Stmt โ Stmt
    ยฌ_   : Stmt โ Stmt
    โฅ    : Stmt
    โค    : Stmt

  field
    [โง]-intro : โ{X Y} โ โข(X) โ โข(Y) โ โข(X โง Y)
    [โง]-elimโ  : โ{X Y} โ โข(X โง Y) โ โข(X)
    [โง]-elimแตฃ  : โ{X Y} โ โข(X โง Y) โ โข(Y)

    [โ]-intro : โ{X Y} โ โข(Y) โ โข(X โถ Y)
    [โ]-elim  : โ{X Y} โ โข(X) โ โข(X โถ Y) โ โข(Y)

    [โ]-intro : โ{X Y} โ โข(Y) โ โข(Y โต X)
    [โ]-elim  : โ{X Y} โ โข(X) โ โข(Y โต X) โ โข(Y)

    [โ]-intro : โ{X Y} โ (โข(X) โ โข(Y)) โ (โข(X) โ โข(Y)) โ โข(X โท Y)
    [โ]-elimโ  : โ{X Y} โ โข(X โท Y) โ โข(X โต Y)
    [โ]-elimแตฃ  : โ{X Y} โ โข(X โท Y) โ โข(X โถ Y)

    [โจ]-introโ : โ{X Y} โ โข(X) โ โข(X โจ Y)
    [โจ]-introแตฃ : โ{X Y} โ โข(Y) โ โข(X โจ Y)
    [โจ]-elim  : โ{X Y Z} โ (โข(X) โ โข(Z)) โ (โข(Y) โ โข(Z)) โ โข(X โจ Y) โ โข(Z)

    [ยฌ]-intro : โ{X} โ (โข(X) โ โข(โฅ)) โ โข(ยฌ X)
    [ยฌ]-elim  : โ{X} โ (โข(ยฌ X) โ โข(โฅ)) โ โข(X)

    [โฅ]-intro : โ{X} โ โข(X) โ (โข(X) โ โข(โฅ)) โ โข(โฅ)
    [โฅ]-elim  : โ{X} โ โข(โฅ) โ โข(X)

    [โค]-intro : โข(โค)
open Propositional โฆ ... โฆ public

-- Theory of classical predicate/(first-order) logic expressed using natural deduction rules
record Predicate {โโ โโ} (Stmt : Type{โโ Lvl.โ โโ}) : Type{Lvl.๐(โโ Lvl.โ โโ)} where
  field
    โฆ propositional โฆ : Propositional{โโ Lvl.โ โโ}(Stmt)

  field
    โโ : โ{X : Type{โโ}} โ (X โ Stmt) โ Stmt
    โโ : โ{X : Type{โโ}} โ (X โ Stmt) โ Stmt

  field
    [โ]-intro : โ{X}{P : X โ Stmt}{a} โ โข(P(a)) โ โข(โโ P)
    [โ]-elim  : โ{X}{P : X โ Stmt}{Z : Stmt} โ (โ{x : X} โ โข(P(x)) โ โข(Z)) โ โข(โโ P) โ โข(Z)

    [โ]-intro : โ{X}{P : X โ Stmt} โ (โ{x : X} โ โข(P(x))) โ โข(โโ P)
    [โ]-elim  : โ{X}{P : X โ Stmt} โ โข(โโ P) โ (โ{x : X} โ โข(P(x)))
open Predicate โฆ ... โฆ public
