module Numeral.Natural.Prime{โ} where

import Level as Lvl
open import Logic.Propositional{โ}
open import Numeral.Natural
open import Numeral.Natural.Oper
open import Numeral.Natural.Relation{โ}
open import Numeral.Natural.Relation.Properties{โ}
open import Relator.Equals{โ}

data Prime(n : โ) : Stmt where
  Prime-intro : (โ{x} โ (x divides n) โ (x โก 1)โจ(x โก n)) โ Prime(n)
-- โ{x y : โ} โ (n divides (x โ y)) โ (n divides x) โจ (n divides y)
-- โ{x y} โ (x โข 0)โง(x โข 1) โ (y โข 0)โง(y โข 1) โ ยฌ(x โ y โก n)

-- [2]-prime : Prime(2)
-- [2]-prime = f where
--   f : โ{x} โ (x divides 2) โ (x โก 1)โจ(x โก 2)
--   f{0} (0div2) = [โฅ]-elim([0]-divides-not(0div2))
--   f{1} (1div2) = [โจ]-introโ ([โก]-intro)
--   f{2} (2div2) = [โจ]-introแตฃ ([โก]-intro)
--   f{3} (3div2) = f(div)
--   f{๐(n)} (ndiv2) = f(div)
