-- Idiom bracket notation.
module Syntax.Idiom where

import      Lvl
open import Type

private variable ‚Ñì ‚Ñì‚ÇÅ ‚Ñì‚ÇÇ : Lvl.Level
private variable A B : Type{‚Ñì}
private variable F : Type{‚Ñì‚ÇÅ} ‚Üí Type{‚Ñì‚ÇÇ}

-- The notation `‚¶á f x‚ÇÅ x‚ÇÇ x‚ÇÉ ‚¶à` will automatically be translated to `((pure f <*> x‚ÇÅ) <*> x‚ÇÇ) <*> x‚ÇÉ`.
record IdiomBrackets (F : Type{‚Ñì‚ÇÅ} ‚Üí Type{‚Ñì‚ÇÇ}) : Type{Lvl.ùêí(‚Ñì‚ÇÅ) Lvl.‚äî ‚Ñì‚ÇÇ} where
  constructor intro
  field
    pure : (A ‚Üí F(A))
    _<*>_ : F(A ‚Üí B) ‚Üí (F(A) ‚Üí F(B))
open IdiomBrackets ‚¶É ‚Ä¶ ‚¶Ñ using (pure ; _<*>_) public

-- The notation `‚¶á‚¶à` will automatically be translated to `empty`.
record IdiomBrackets‚ÇÄ (F : Type{‚Ñì‚ÇÅ} ‚Üí Type{‚Ñì‚ÇÇ}) : Type{Lvl.ùêí(‚Ñì‚ÇÅ) Lvl.‚äî ‚Ñì‚ÇÇ} where
  constructor intro
  field
    empty : F(A)
open IdiomBrackets‚ÇÄ ‚¶É ‚Ä¶ ‚¶Ñ using (empty) public

-- The notation `‚¶á f‚ÇÅ x‚ÇÅ x‚ÇÇ x‚ÇÉ | f‚ÇÇ y‚ÇÅ y‚ÇÇ | f‚ÇÉ z‚ÇÅ ‚¶à` will automatically be translated to `(((pure f <*> x‚ÇÅ) <*> x‚ÇÇ) <*> x‚ÇÉ) <|> (((pure f‚ÇÇ <*> y‚ÇÅ) <*> y‚ÇÇ) <|> (pure f‚ÇÉ <*> z‚ÇÅ))`.
record IdiomBrackets‚Çä (F : Type{‚Ñì‚ÇÅ} ‚Üí Type{‚Ñì‚ÇÇ}) ‚¶É _ : IdiomBrackets(F) ‚¶Ñ : Type{Lvl.ùêí(‚Ñì‚ÇÅ) Lvl.‚äî ‚Ñì‚ÇÇ} where
  constructor intro
  field
    _<|>_ : F(A) ‚Üí F(A) ‚Üí F(A)
open IdiomBrackets‚Çä ‚¶É ‚Ä¶ ‚¶Ñ using (_<|>_) public
