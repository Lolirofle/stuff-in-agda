module Structure.Operator.Algebra where

open import Logic.Predicate
import      Lvl
open import Structure.Operator.Monoid
open import Structure.Operator.Properties
open import Structure.Operator.Ring
open import Structure.Operator.Vector
open import Structure.Operator.Vector.BilinearOperator
open import Structure.Operator.Vector.LinearMap
open import Structure.Setoid
open import Type

module _
  {โแตฅ โโ โแตฅโ โโโ}
  {V : Type{โแตฅ}} โฆ _ : Equiv{โแตฅโ}(V) โฆ
  {S : Type{โโ}} โฆ _ : Equiv{โโโ}(S) โฆ
  (_+แตฅ_ : V โ V โ V)
  (_โแตฅ_ : V โ V โ V)
  (_โโแตฅ_ : S โ V โ V)
  (_+โ_ : S โ S โ S)
  (_โโ_ : S โ S โ S)
  {โแตฅโโ โโโโ}
  where

  record Algebra : Type{โโโ Lvl.โ โโ Lvl.โ โแตฅโ Lvl.โ โแตฅ Lvl.โ Lvl.๐(โแตฅโโ Lvl.โ โโโโ)} where
    constructor intro
    field
      โฆ vectorSpace โฆ      : VectorSpace(_+แตฅ_)(_โโแตฅ_)(_+โ_)(_โโ_) {โโโโ}
      โฆ [โแตฅ]-bilinearity โฆ : BilinearOperator vectorSpace (_โแตฅ_)
      โฆ non-zero-vector-relation โฆ : NonIdentityRelation(VectorSpace.[+แตฅ]-monoid vectorSpace) {โแตฅโโ}
    open VectorSpace(vectorSpace) public
    open BilinearOperator _ _ ([โแตฅ]-bilinearity) public

    vectorRing : โฆ Associativity(_โแตฅ_) โฆ โ โฆ โ(Identity(_โแตฅ_)) โฆ โ Ring(_+แตฅ_)(_โแตฅ_) {โแตฅโโ}
    Monoid.binaryOperator (Ring.[โ]-monoid vectorRing) = BilinearMap.binaryOperator [โแตฅ]-bilinearity

  -- TODO: UnitalAssociativeAlgebra
