module String where

import      Lvl
open import Type

postulate String : Type{Lvl.ùüé}
{-# BUILTIN STRING String #-}

module _ {‚Ñì} (T : Type{‚Ñì}) where
  -- StringRepr(T) means that the type T have a standard representation as a string (not necessarily an unique or parser-friendly one) used for pretty-printing.
  record StringRepr : Type{‚Ñì} where
    field string : T ‚Üí String
  open StringRepr ‚¶É ‚Ä¶ ‚¶Ñ public

private
  module Primitives where
    primitive primShowString : String ‚Üí String

instance
  String-stringRepr : StringRepr(String)
  StringRepr.string String-stringRepr = Primitives.primShowString
